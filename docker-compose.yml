version: "3.7"
services:
  api-db:
    image: postgres
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTRGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - back-db-data:/var/lib/postgresql/data
    networks:
      - back

  api:
    build:
      context: .
      dockerfile: Dockerfiles/api/Dockerfile
    depends_on:
      - api-db
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_DB_BACKENDS=django.db.backends.postgresql
      - DJANGO_DB_HOST=api-db
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=db
      - DJANGO_DB_USERNAME=user
      - DJANGO_DB_PASSWORD=password
    ports:
      - "7777:7777"
    command: ["bash", "-c", "./entry_point.sh"]
    volumes:
      - ./api/:/app/
    networks:
      - back
      - middle
    restart: always

  api-celery:
    build:
      context: .
      dockerfile: Dockerfiles/api/Dockerfile
    command: celery -A api worker -l info
    volumes:
      - ./api/:/app/
    networks:
      - back
    depends_on:
      - api-db
      - api-redis

  api-redis:
    image: "redis:alpine"
    networks:
      - back


  front-db:
    image: postgres
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - front-db-data:/var/lib/postgresql/data
    networks:
      - front

  front:
    build:
      context: .
      dockerfile: Dockerfiles/front/Dockerfile
    depends_on:
      - front-db
      - api
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_DB_BACKENDS=django.db.backends.postgresql
      - DJANGO_DB_HOST=front-db
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=db
      - DJANGO_DB_USERNAME=user
      - DJANGO_DB_PASSWORD=password
    ports:
      - "8000:8000"
    command: ["bash", "-c", "./entry_point.sh"]
    volumes:
      - ./front/:/app/
    networks:
      - middle
      - front
    restart: always

  front-celery:
    build:
      context: .
      dockerfile: Dockerfiles/front/Dockerfile
    command: celery -A api worker -l info
    volumes:
      - ./front/:/app/
    depends_on:
      - front-db
      - front-redis
    networks:
      - front

  front-redis:
    image: "redis:alpine"
    networks:
      - front

volumes:
  back-db-data:
  front-db-data:

networks:
  front:
  middle:
  back:
